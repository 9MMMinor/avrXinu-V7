<!-- Creator     : groff version 1.19.2 -->
<!-- CreationDate: Tue Dec 28 14:52:31 2010 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p     { margin-top: 0; margin-bottom: 0; }
       pre   { margin-top: 0; margin-bottom: 0; }
       table { margin-top: 0; margin-bottom: 0; }
</style>
<title></title>
</head>
<body>

<hr>


<p style="margin-top: 1em" valign="top">Printed 12/28/2010
1</p>

<p style="margin-top: 1em" valign="top">EIS(3) Xinu
Programmer&rsquo;s Manual EIS(3)</p>


<p style="margin-left:8%; margin-top: 1em"><b><small>NAME</small></b>
<br>
EIS &minus; extended instruction set for the LSI-11/2</p>


<p style="margin-left:8%; margin-top: 1em"><b><small>SYNOPSIS</small>
<br>
jsr pc,times2 <br>
jsr pc,over2 <br>
jsr pc,shift2 <br>
jsr pc,cshft2</b></p>


<p style="margin-left:8%; margin-top: 1em"><b><small>DESCRIPTION</small></b>
<br>
Library <i>eis.a</i> contains assembly language routines to
simulate LSI-11 multiply, divide, arithmetic shift, and
arithmetic shift combined instructions. Normally, an
assembly language listing should be filtered through the
programs <i>subMUL, subDIV, subASH,</i> and <i>subASHC</i>
to replace any of the extended instructions with the proper
calling sequence. The resulting assembly language program
must be loaded with this library, which contains the
routines called.</p>

<p style="margin-left:8%; margin-top: 1em">These routines
do <i>not</i> use the C calling conventions. The multiply
routine is called by:</p>

<table width="100%" border=0 rules="none" frame="void"
       cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mfps</p></td>
<td width="15%">


<p valign="top">-(sp)</p></td>
<td width="65%">


<p valign="top">/ push psw</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">A,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push multiplier</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">R,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push multiplicand</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">jsr</p></td>
<td width="15%">


<p valign="top">pc,times2</p></td>
<td width="65%">


<p valign="top">/ call mul simulation routine</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">(sp)+,R</p></td>
<td width="65%">


<p valign="top">/ save low word of product</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">(sp)+,R+1</p></td>
<td width="65%">


<p valign="top">/ save high word of product</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mtps</p></td>
<td width="15%">


<p valign="top">(sp)+</p></td>
<td width="65%">


<p valign="top">/ put in new psw</p></td>
</table>

<p style="margin-left:8%;">where the instruction being
mimicked is &quot;mul A,R&quot; and R is an even-numbered
register (if R is odd, change the &quot;mov (sp)+,R&quot; to
&quot;tst (sp)+&quot; and the &quot;mov (sp)+,R+1&quot; to
&quot;mov (sp)+,R&quot;).</p>

<p style="margin-left:8%; margin-top: 1em">The division
routine is called by:</p>

<table width="100%" border=0 rules="none" frame="void"
       cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mfps</p></td>
<td width="15%">


<p valign="top">-(sp)</p></td>
<td width="65%">


<p valign="top">/ push psw</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">A,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push divisor</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">R,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push high word of dividend</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">R+1,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push low word of dividend</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">jsr</p></td>
<td width="15%">


<p valign="top">pc,over2</p></td>
<td width="65%">


<p valign="top">/ call div simulation routine</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">(sp)+,R+1</p></td>
<td width="65%">


<p valign="top">/ save remainder</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">(sp)+,R</p></td>
<td width="65%">


<p valign="top">/ save quotient</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">tst</p></td>
<td width="15%">


<p valign="top">(sp)+</p></td>
<td width="65%">


<p valign="top">/ reset stack pointer</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mtps</p></td>
<td width="15%">


<p valign="top">(sp)+</p></td>
<td width="65%">


<p valign="top">/ put in new psw</p></td>
</table>

<p style="margin-left:8%;">where the instruction being
mimicked is &quot;div A,R&quot;.</p>

<p style="margin-left:8%; margin-top: 1em">The arithmetic
shift routine is called by:</p>

<table width="100%" border=0 rules="none" frame="void"
       cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mfps</p></td>
<td width="15%">


<p valign="top">-(sp)</p></td>
<td width="65%">


<p valign="top">/ get psw</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">A,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push shift count onto the stack</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">r0,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push number to be shifted onto the
stack</p> </td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">jsr</p></td>
<td width="15%">


<p valign="top">pc,shift2</p></td>
<td width="65%">


<p valign="top">/ call the simulation routine</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">(sp)+,r0</p></td>
<td width="65%">


<p valign="top">/ save the result</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">tst</p></td>
<td width="15%">


<p valign="top">(sp)+</p></td>
<td width="65%">


<p valign="top">/ reset stack pointer</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mtps</p></td>
<td width="15%">


<p valign="top">(sp)+</p></td>
<td width="65%">


<p valign="top">/ put in new psw</p></td>
</table>

<p style="margin-left:8%;">where the instruction being
mimicked is &quot;ash A,R&quot;. The arithmetic shift
combined routine is called by:</p>

<table width="100%" border=0 rules="none" frame="void"
       cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mfps</p></td>
<td width="15%">


<p valign="top">-(sp)</p></td>
<td width="65%">


<p valign="top">/ get psw</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">A,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push shift count onto the stack</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">r0,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push high word onto the stack</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">r1,-(sp)</p></td>
<td width="65%">


<p valign="top">/ push low word onto the stack</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">jsr</p></td>
<td width="15%">


<p valign="top">pc,shift2</p></td>
<td width="65%">


<p valign="top">/ call the simulation routine</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">(sp)+,r1</p></td>
<td width="65%">


<p valign="top">/ save the low word</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mov</p></td>
<td width="15%">


<p valign="top">(sp)+,r0</p></td>
<td width="65%">


<p valign="top">/ save the high word</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">tst</p></td>
<td width="15%">


<p valign="top">(sp)+</p></td>
<td width="65%">


<p valign="top">/ reset stack pointer</p></td>
<tr valign="top" align="left">
<td width="11%"></td>
<td width="9%">


<p valign="top">mtps</p></td>
<td width="15%">


<p valign="top">(sp)+</p></td>
<td width="65%">


<p valign="top">/ put in the new psw</p></td>
</table>

<p style="margin-left:8%;">where the instruction being
mimicked is &quot;ashc A,R&quot;.</p>


<p style="margin-left:8%; margin-top: 1em"><b><small>FILES</small></b>
<br>
{Xinu-directory}/lib/libeis.a <br>
{Xinu-directory}/bin/subMUL <br>
{Xinu-directory}/bin/subDIV <br>
{Xinu-directory}/bin/subASH <br>
{Xinu-directory}/bin/subASHC</p>

<p style="margin-left:8%; margin-top: 1em"><b><small>SEE
ALSO</small></b> <br>
cc11(1), subEIS(1)</p>


<p style="margin-left:8%; margin-top: 1em"><b><small>DIAGNOSTICS</small></b>
<br>
The condition codes are correctly set by the above calling
sequence.</p>

<p style="margin-left:8%; margin-top: 1em">Version 7
avr-Xinu Printed 12/28/2010 1</p>
<hr>
</body>
</html>
