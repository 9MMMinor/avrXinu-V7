.TH STDIO 3
.SH NAME
stdio \- standard input/output library routines and macros
.SH SYNOPSIS
.B #include <avr-Xinu.h>
.PP
.B FILE *stdin;
.br
.B FILE *stdout;
.br
.B FILE *stderr;
.br
.B int STDIN;
.br
.B int STDOUT;
.br
.B int STDERR;
.SH DESCRIPTION
The standard I/O library provides a simple and efficient buffered stream
     I/O interface.  Input and output is mapped into logical data streams and
     the physical I/O characteristics are concealed.  The functions and macros
     are listed below; more information is available from the individual man
     pages.

     A stream is associated with an external file (which may be a physical
     device) by opening a file, which may involve creating a new file.  Creat-
     ing an existing file causes its former contents to be discarded.  If a
     file can support positioning requests (such as a disk file, as opposed to
     a terminal) then a file position indicator associated with the stream is
     positioned at the start of the file (byte zero), unless the file is
     opened with append mode.  If append mode is used, the position indicator
     will be placed at the end-of-file.  The position indicator is maintained
     by subsequent reads, writes and positioning requests.  All input occurs
     as if the characters were read by successive calls to the fgetc(3) func-
     tion; all output takes place as if all characters were written by succes-
     sive calls to the fputc(3) function.

     A file is disassociated from a stream by closing the file.  Output
     streams are flushed (any unwritten buffer contents are transferred to the
     host environment) before the stream is disassociated from the file.  The
     value of a pointer to a FILE object is indeterminate (garbage) after a
     file is closed.

At program startup, three streams are predefined and need not be opened
explicitly:
.It standard input (for reading conventional input),
.It standard output (for writing conventional output), and
.It standard error (for writing diagnostic output).
These streams are abbreviated
.I stdin,
.I stdout
and
.I stderr.
Initially, the standard error stream is unbuffered; the standard input and output
streams are fully buffered if and only if the streams do not refer to an
interactive or ``terminal'' device, as determined by the isatty(3) function.
In fact, all freshly-opened streams that refer to terminal devices
default to line buffering, and pending output to such streams is written
automatically whenever such an input stream is read.
Note that this
applies only to ``true reads''; if the read request can be satisfied by
existing buffered data, no automatic flush will occur.
.SH SEE ALSO
create(2)