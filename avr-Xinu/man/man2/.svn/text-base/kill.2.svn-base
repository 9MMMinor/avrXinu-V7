.\"Modified from man(1) of FreeBSD, the NetBSD mdoc.template, and mdoc.samples.
.\"See Also:
.\"man mdoc.samples for a complete listing of options
.\"man mdoc for the short list of editing options
.\"/usr/share/misc/mdoc.template
.ds release-date February 8, 2011
.ds xinu-platform avr-Xinu
.\"
.Os XINU V7
.Dd \*[release-date] 
.Dt KILL \&2 \*[xinu-platform]
.Sh NAME
kill \- terminate a process
.Sh SYNOPSIS
.Em int
.Em kill(pid)
.br
.Em int pid;
.fi
.Sh DESCRIPTION
.Ar Kill
will stop process
.Ar pid
and remove it from the system,
returning SYSERR if the process id is invalid, OK otherwise.
.Ar Kill
terminates a process immediately.
If the process has been queued on a semaphore, it is removed from
the queue and the semaphore count is incremented as if the
process had never been there.
Processes waiting to send a message to a full port disappear without
affecting the port.
If the process is waiting for I/O, the I/O is stopped (if possible).
.Pp
One can kill a process in any state, including a suspended one.
Once killed, a process cannot recover.
.Sh BUGS
At present there is no way to recover space allocated dynamically
when a process terminates.
However,
.Ar kill
does recover the stack space allocated to a process when it is created.
