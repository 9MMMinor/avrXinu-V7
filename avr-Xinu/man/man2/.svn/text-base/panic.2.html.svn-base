<!-- Creator     : groff version 1.19.2 -->
<!-- CreationDate: Sat Jan  8 15:17:47 2011 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p     { margin-top: 0; margin-bottom: 0; }
       pre   { margin-top: 0; margin-bottom: 0; }
       table { margin-top: 0; margin-bottom: 0; }
</style>
<title></title>
</head>
<body>

<hr>


<p valign="top">PANIC(2) avr-Xinu PANIC(2)</p>

<p style="margin-top: 1em" valign="top"><b>NAME</b></p>

<p style="margin-left:8%;">panic &minus; abort processing
due to severe error</p>


<p style="margin-top: 1em" valign="top"><b>SYNOPSIS</b></p>

<p style="margin-left:8%;"><i>int panic(message) <br>
char *message;</i></p>


<p style="margin-top: 1em" valign="top"><b>DESCRIPTION</b></p>

<p style="margin-left:8%;"><i>Panic</i> will print the
character string <i>message</i> on the console, dump the
machine registers and top few stack locations, and halt the
processor. It uses <i>kprintf</i> rather than <i>printf,</i>
so it may be called anywhere in the kernel (e.g., from an
interrupt routine that may be executed by the null process).
Typing <i>P</i> after the processor halts will cause panic
to restore the machine state and continue, so it is possible
to examine locations with ODT after the processor halts, and
still restart processing.</p>

<p style="margin-left:8%; margin-top: 1em">There are
alternate entry points to <i>panic</i> that are invoked by
branch to location zero, illegal interrupts, or processor
exceptions (traps).</p>

<p style="margin-top: 1em" valign="top"><b>SEE ALSO</b></p>

<p style="margin-left:8%;">kprintf(3), printf(3)</p>

<p style="margin-left:8%; margin-top: 1em">XINU V7
February&nbsp;8, 2011 XINU V7</p>
<hr>
</body>
</html>
