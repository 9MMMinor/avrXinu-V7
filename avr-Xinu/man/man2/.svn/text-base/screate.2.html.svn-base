<!-- Creator     : groff version 1.19.2 -->
<!-- CreationDate: Sat Jan  8 15:17:49 2011 -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<meta name="Content-Style" content="text/css">
<style type="text/css">
       p     { margin-top: 0; margin-bottom: 0; }
       pre   { margin-top: 0; margin-bottom: 0; }
       table { margin-top: 0; margin-bottom: 0; }
</style>
<title></title>
</head>
<body>

<hr>


<p valign="top">SCREATE(2) avr-Xinu SCREATE(2)</p>

<p style="margin-top: 1em" valign="top"><b>NAME</b></p>

<p style="margin-left:8%;">screate &minus; create a new
semaphore</p>


<p style="margin-top: 1em" valign="top"><b>SYNOPSIS</b></p>

<p style="margin-left:8%;"><i>int screate(count) <br>
int count;</i></p>


<p style="margin-top: 1em" valign="top"><b>DESCRIPTION</b></p>

<p style="margin-left:8%;"><i>Screate</i> creates a
counting semaphore and initializes it to <i>count.</i> If
successful, <i>screate</i> returns the integer identifier of
the new semaphore. It returns SYSERR if no more semaphores
can be allocated or if <i>count</i> is less than zero.</p>

<p style="margin-left:8%; margin-top: 1em">Semaphores are
manipulated with WAIT(2) and SIGNAL(2) to synchronize
processes. Waiting causes the semaphore count to be
decremented; decrementing a semaphore count past zero causes
a process to be blocked. Signaling a semaphore increases its
count, freeing a blocked process if one is waiting.</p>

<p style="margin-top: 1em" valign="top"><b>SEE ALSO</b></p>

<p style="margin-left:8%;">scount(2), sdelete(2),
signal(2), sreset(2), wait(2)</p>

<p style="margin-left:8%; margin-top: 1em">XINU V7
February&nbsp;8, 2011 XINU V7</p>
<hr>
</body>
</html>
