.\"Modified from man(1) of FreeBSD, the NetBSD mdoc.template, and mdoc.samples.
.\"See Also:
.\"man mdoc.samples for a complete listing of options
.\"man mdoc for the short list of editing options
.\"/usr/share/misc/mdoc.template
.ds release-date February 8, 2011
.ds xinu-platform avr-Xinu
.\"
.Os XINU V7
.Dd \*[release-date] 
.Dt OPEN \&2 \*[xinu-platform]
.Sh NAME
open \- device independent open routine
.Sh SYNOPSIS
.Em int
.Em open(dev, name, mode)
.br
.Em int dev;
.br
.Em char *name;
.br
.Em char *modes;
.fi
.Sh DESCRIPTION
.Ar Open
will establish connection with the device given by
.Ar dev
using the null-terminated string \f2name\f1 to name an object on that
device, and null-terminated string \f2mode\f1 to specify the access mode
for that object.
Valid access mode characters include \f3r\f1 (read), \f3w\f1 (write),
\f3o\f1 (old), and \f3n\f1 (new) as specified in ACCESS(2).
.Pp
\f2Open\f1 returns SYSERR if
.Ar dev
is incorrect or cannot be opened.
If successful, the value returned by \f2open\f1 depends on the device.
Most calls to open return a device descriptor that can be used in
subsequent calls to \f2readf1 or \f2write\f1.
For example, calling \f2open\f1 on a disk device with a file name
as an argument produces a descriptor by which that file can be accessed.
.Sh SEE ALSO
access(2), close(2), ckmode(3), namespace(4)
.Sh BUGS
Not all devices produce meaningful return values for \f2open\f1.
