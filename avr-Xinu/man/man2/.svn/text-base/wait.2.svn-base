.\"Modified from man(1) of FreeBSD, the NetBSD mdoc.template, and mdoc.samples.
.\"See Also:
.\"man mdoc.samples for a complete listing of options
.\"man mdoc for the short list of editing options
.\"/usr/share/misc/mdoc.template
.ds release-date February 8, 2011
.ds xinu-platform avr-Xinu
.\"
.Os XINU V7
.Dd \*[release-date] 
.Dt WAIT \&2 \*[xinu-platform]
.Sh NAME
.Nm wait
.Nd block and wait until semaphore signalled
.Sh SYNOPSIS
.Ft int Fn wait "int  sem"
.Sh DESCRIPTION
.Nm  Wait
decrements the count of semaphore
.Ar  sem ,
blocking the calling process if the count goes negative
by enqueuing it in the queue for
.Ar  sem .
The only ways to get free from a semaphore queue are for
some other process to signal the semaphore, or
for some other process to delete or reset the semaphore.
.Nm  Wait
and
.Xr signal 2
are the two basic synchronization primitives in the system.
.Pp
.Nm  Wait
returns SYSERR if
.Ar  sem
is invalid.
Otherwise, it returns OK once freed from the queue.
.Sh SEE ALSO
.Xr scount 2  , Xr screate 2  , Xr sdelete 2  , Xr signal 2  , Xr sreset 2
