# Makefile.AVR-P40-USB
#
#  Platform-specific Makefile definitions for the
#  avr-Xinu operating system.
#

# This makefile contains all the platform/board definitions

# PLATFORM is informational only and is defined here.
PLATFORM = OLIMEX P40-USB Proto Board with 8 MHz clock and on-board USB FTDI

//MCU=atmega8
//MCU=atmega8515
//MCU=atmega644
//MCU=atmega328p
//MCU=atmega16
//MCU=atmega32
MCU = atmega1284p
TARGET_ARCH = $(MCU)

# 8.00 Mhz external crystal (CKDIV8=1)
CLOCK    = 8000000L
32kCLOCK = NO
#----------------------------------------------------------------------------
# Edit host serial line device (Serial Port to programmer)
#----------------------------------------------------------------------------
HOST_SERIAL = /dev/tty.usbserial-00004006
#----------------------------------------------------------------------------
# Edit target serial line device (Serial Port to target board)
# This may also be the upload (boot) device
#----------------------------------------------------------------------------
USB_SERIAL = /dev/tty.usbserial-00004006

FUSES      = -U hfuse:w:0x99:m -U lfuse:w:0xEC:m
# ATmega1284 fuse bits (fuse bits for other devices are different!):
# Example for 8 MHz external oscillator
# Fuse high byte:
# 0x99 = 1 0 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)
#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0
#        | | | |   | +-------- BOOTSZ1
#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)
#        | | | +-------------- WDTON (if set to 0, watchdog timer always on)
#        | | +---------------- SPIEN (if set to 0, serial programming is enabled)
#        | +------------------ JTAGEN (if set to 0, enable JTAG)
#        +-------------------- OCDEN (if set to 0, enable OCD)
# Fuse low byte:
# 0xec = 1 1 1 0   1 1 0 0
#        ^ ^ \ /   \--+--/
#        | |  |       +------- CKSEL 3..0 ( 0010 default, set to 1100 for external crystal Onboard AVR-P40-USB)
#        | |  +--------------- SUT 1..0 (slowly rising power)
#        | +------------------ CKOUT (clock output on Port B0 if 0)
#        +-------------------- CKDIV8 (initial divide clock by 8 if 0)

# .data, .bss, heap in internal 16K RAM:
EXTERNAL_RAM =
