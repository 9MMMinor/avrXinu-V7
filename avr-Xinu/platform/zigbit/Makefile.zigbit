# Makefile.zigbit

# This makefile contains all the platform/board definitions

# XINU_PLATFORM is informational only and is defined here.
# XINU_PLATFORM = Atmel Wireless Xplained Pro extension board (zigbit)
#	with ATZB-S1-256-3-0-C
XINU_PLATFORM = mega256rfr2 with 16 MHz clock and 32 kHz watch crystal and stk500v2 bootloader

//MCU=atmega8
//MCU=atmega8515
//MCU=atmega644
//MCU=atmega328p
//MCU=atmega16
//MCU=atmega32
//MCU = atmega1284p
MCU=atmega256rfr2
PLATFORM_ARCH = $(MCU)

#  16.000 Mhz external crystal (CKDIV8=1)
CLOCK		= 16000000

#----------------------------------------------------------------------------
# Edit host serial line device (Serial Port to programmer)
#----------------------------------------------------------------------------
HOST_SERIAL = /dev/tty.usbserial*

#----------------------------------------------------------------------------
# Edit target serial line device (Serial Port to target board)
# This may also be the upload (boot) device
#----------------------------------------------------------------------------
USB_SERIAL = /dev/tty.usbserial*


FUSES      = -U hfuse:w:0x99:m -U lfuse:w:0xE6:m

# Atmega256rfr2 fuse bits used above (fuse bits for other devices are different!):
# Example for 16 MHz external oscillator
# Extended Fuse byte:
# 0xFE = 1 1 1 1   1 1 1 0 <-- BODLEVEL0 (Brown-Out Reset 1.8V)
#        ^ ^ ^ ^   ^ ^ ^------ BODLEVEL1
#        | | | |   | +-------- BODLEVEL2
#        | | | |   +---------- reserved
#        | | | +-------------- "
#        | | +---------------- "
#        | +------------------ "
#        +-------------------- "
# Fuse high byte:
# 0x99 = 1 0 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)
#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0
#        | | | |   | +-------- BOOTSZ1
#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)
#        | | | +-------------- WDTON (if set to 0, watchdog is always on)
#        | | +---------------- SPIEN (if set to 0, serial programming enabled)
#        | +------------------ JTAGEN (if set to 0, JTAG enabled)
#        +-------------------- OCDEN (if set to 0, enable On-Chip Debug)
# Fuse low byte:
# 0xE6 = 1 1 1 0   0 1 1 0
#        ^ ^ \ /   \--+--/
#        | |  |       +------- CKSEL 3..0 (0010 default set to 0110 for 16MHz crystal)
#        | |  +--------------- SUT 1..0 (slowly rising power)
#        | +------------------ CKOUT (if 0 output the system clock on the CLKO pin)
#        +-------------------- CKDIV8 (initial divide clock by 8 if 0)
#
# For computing fuse byte values for other devices and options see
# the fuse bit calculator at http://www.engbedded.com/fusecalc/

#  Fuses for STK500boot/Optiboot Bootloader
HFUSE = 0x98
LFUSE = 0xE6
EFUSE = 0xFE
UNLOCK_BITS = 0x3F
LOCK_BITS = 0x0F

#  Bootloader fuse settings
#  AVRDUDE write fuses
BOOTFUSES      = -U hfuse:w:$(HFUSE):m -U lfuse:w:$(LFUSE):m -U efuse:w:$(EFUSE):m

#  .data, .bss, heap in internal 16K RAM:
EXTERNAL_RAM =

# NOTE:
#
#The ATmega256RFR2 differs from previous mega microcontrollers in the fact that it has a 16MHz internal RC oscillator instead of an 8MHz internal RC oscillator.  Switching between the internal 16MHz RC oscillator to an external 16MHz crystal requires some specific configuration.
#
#The value in the Clock Prescaler register will have different effects depending on the System Clock Source.  By default, the CLKPR register contains 0x00, regardless of clock source.  A value of 0x00 will give a division factor of /2 when using the internal RC oscillator, while 0x00 will give a division facter of /1 for all other clock sources.
#
#If the user wants to switch from the internal 16MHz RC oscillator to the external 16MHz crystal, the CLKPS3:0 bits must be changed accordingly within the CLKPR register from application code to ensure proper timing.  Note that the value written to the CLKPR register will override the CKDIV8 fuse.  See section 11.11.2 of the ATmega256RFR2 datasheet for full explanation and a table of division factors.

#AVRDUDE_PROGRAMMER = arduino
AVRDUDE_PROGRAMMER = stk500v2
AVRDUDE_PORT = $(USB_SERIAL)
AVRDUDE_UPLOAD_RATE = 115200

AVRDUDE_FLAGS = -F -b $(AVRDUDE_UPLOAD_RATE)

# Program Settings
AVRDUDE	= avrdude